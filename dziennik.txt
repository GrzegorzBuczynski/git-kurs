05.09.20222
lekcja
[Odcinek 1] Jak Kupić Oraz Skonfigurować Hosting I Domenę? 
https://www.youtube.com/watch?v=lO09rfYsDjs&list=PLxv_3XVN6Gc0wtaCGf522Q0XyFxrC44Eq
[Odcinek 2] Instalujemy Certyfikat SSL & HTTPS, Zabezpieczamy Pliki Hasłem
https://www.youtube.com/watch?v=2BBqXttspMw&list=PLxv_3XVN6Gc0wtaCGf522Q0XyFxrC44Eq&index=2 
[Odcinek 3] Tworzymy Profesjonalny Adres Mailowy!
https://www.youtube.com/watch?v=aRndff4wbZg&list=PLxv_3XVN6Gc0wtaCGf522Q0XyFxrC44Eq&index=3
Jak Wgrać Własną Czcionkę Na Stronę WWW?
https://www.youtube.com/watch?v=6Za9sUttXOQ
Bazy danych SQL vs. MongoDB
https://www.youtube.com/watch?v=f2WWM3HaExU

!Czym jest Web Service i REST API?
https://www.youtube.com/watch?v=JkF-bKQUlSs&t=4s
w skrócie rest api to stwoarzenie metod do komunikacji aplikacji z bazą danych 
i wystawienie endpointów do komunikacji przez protokół http

!ciekawostka tworzenie konstruktorów, getterów i setterów automatycznie
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
przed klasą wpisane są beens
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor

w filmie trzy klasy dbclient, post i użytkownik
+konfiguracja bazydanych (klasa)
pom z zależnościami
http://localhost:8080/users
zrobiłem git clone do lokalizacji repozytoria/jak nauczyc się programowania

główne metody komunikacji http 
get
post
put 
delete

json format praktyka
{"username":"kamil88", "age":31, "name":"Kamil Brzezinski"}


Lekcja Jak tworzyć REST API? 10 najważniejszych zasad. https://www.youtube.com/watch?v=lbX3Zs_AxFA
zapytania do servera przez https
query string
/posts?user_id=7 zwraca posty użytkownika o id równym 7
/users/7/posts  zwraca niewiadomo co

/users?page=1&pafe_size=30 pobiera pierwszą listy użytkowników i ogranicza ją do 30 rokordów

/users/activated  nie poprawnie,nie powinniśmy zagnieżdżać zwracanych danych
/users?activated=true  poprawnie i czytelnie pytamy o userow zktórzy maja parametr activated=true
przyjmij że na końcu zapytania http nie dodajemy slash / trzymaj sie jednej regóły

autentykacja - logowanie
autoryzacja - zalogowany ale czy ma uprawnienia?
i tu psikus jesli nie jesteśmy zalogowani serwer zwraca 401 co znaczy unauthorized
natomiast w przypadku niewystarczjących uprawnień server powinien zwracać 403 forbidden.
W naszej kwesti leży jak zaprogramujemy serwer, jaką odpowiedz w postaci kodu bedzie zwracał.


09.09.2022
lekcja
1. jak łączyc się z zewnętrznym api.  Python - jak łączyć się z zewnętrznym API? https://www.youtube.com/watch?v=Pa23kKiGHH8
2. Python - podstawy w 2h https://www.youtube.com/watch?v=BBu6ZoAHIwI&list=PLp9WLfHXxbce6FEB9bk5sjdptTGI7ybOM

10.09.2022
lekcja
JDK zawiera narzędzia do rozwoju kodu
JRE zawiera narzędzia do uruchomienia kodu bez narzedzi do dewelopmentu

JAVA-HOME C:\Program Files\Java
JAVA HOME C:\Program Files\Eclipse Adoptium


11.09.2022
Chad Darby Course
Inversion of control
dependency injection from application context through constructor

        // read spring config file

        ClassPathXmlApplicationContext context =
                new ClassPathXmlApplicationContext("ApplicationContext.xml");

        // get bean from spring container

        Coach theCoach = context.getBean("tennisCoach", Coach.class);

        // call a method on the bean

        System.out.println(theCoach.getDailyWorkout());
        // close the context

        context.close();

12.09.2022 
object injection through setter

13.09.2022 
literal values injection through setter
loading properties/values from properties file to spring config file .xml

15.09.2022
Beans scope:
Default singelton - one instance for all requests
scope="prototype" - one instance for each bean request

bean lifecycle methods
custom intialization:
init-method="doMyStartupStuff"  <-- method name, the metod should be no=NoArgs
destroy-method="doMyCleanUpStaff"> on prototype scope needed is custom code to run destroy method

16.09.2022
Spring annotations 
<context:component-scan base-package="com.luv2code.springdemo" />
@Component

17.09.2022
Spring configuration with Java Annotation - Dependency Injection
@Autowired  --> spring scan for component that satisfy dependency (scan for class that match to given interface)
@Qualifier("beanID") --> determines which implementation to use
beanID - class name but lower case first letter

Constructor injection
    private FortuneService fortuneService;

    @Autowired
    public TennisCoach(FortuneService theFortuneService) {
        fortuneService = theFortuneService;

Setter injection
    private FortuneService fortuneService;

    @Autowired
    public void setFortuneService(FortuneService fortuneService) {
        this.fortuneService = fortuneService;

Method injection <-- setter method can be repleced by any name. that's whole trick
Field injection <-- just add annotation before field
@Autowired
private FortuneService fortuneService;

for each component you can add annotation @Scope("prototype") to get new object for each initialization, default scpoe is "singelton"
you can control also bean lifecycle by adding method to inside component: @PostConstruct and @PreDestroy. Important method should be no-agr.
post and pre annotation don't work in java 9 and leter because javax.annotation-api-1.3.2.jar was removed from default classpath, you need to add this jar manualy to your lib/buildpath.

18.09.2022 
Spring configuration with java code

we annotate java config class by @Configuration we specify components range by @ComponentScan("package.name")
@Configuration
@ComponentScan("package.name")
public class SportConfig{}

next in main app we read configuration class AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(SportConfig.class)
then you can retrive Beans

Logger setup in two files
MyLoogerConfig.java
mylogger.properties  > root.logger.level=CONFIG > printed.logger.level=CONFIG
The log levels define the severity of a message. The Level class is used to define which messages should be written to the log.
The following lists the Log Levels in descending order:
SEVERE (highest)
WARNING
INFO
CONFIG
FINE
FINER
FINEST
In addition to that you also have the levels OFF and ALL to turn the logging off or to log everything. 
Java class name changed to MyLoogerConfig.txt to deactivate setup

Beans lesson >> we define every needed @Bean manualy in config file by method
@Configuration
// @ComponentScan("com.luv2code.springdemo") <-- no longer needed
public class ConfigSport {
    // define bean for our sad fortune service
    @Bean
    public FortuneService sadFortuneService() {
        return new FortuneServiceSad();
    }

    // define bean for our swim coach AND inject dependency
    @Bean
    public Coach coachSwim() {
        return new CoachSwim(sadFortuneService());
    }
}

Bean as a wrapper to third-party class
FAQ: What is a real-time use case for @Bean? https://www.udemy.com/course/spring-hibernate-tutorial/learn/lecture/22289332#overview

19.09.2022 #VsCode #CSS #HTML
Emmet shortcuts https://www.udemy.com/course/pisz-szybszy-i-wydajniejszy-kod-html-i-css/learn/lecture/16665394#overview  and https://www.udemy.com/course/java-od-podstaw-do-eksperta-tworz-wasne-aplikacje/learn/lecture/7050856#overview

VsCode
Ctrl+/ comment selected/line we are inside
Shift+Alt+⬆/⬇  duplicate line
Alt+⬇⬆  move line
Shift + Ctrl + Alt ⬆/⬇ same as upper but insert without using mouse and that way quicker for greater number of lines
left Alt + LMB this way you can insert cursor in a few places
Ctrl + h find and replace tool -->option1 chenge for next -->option2 change for all
Ctrl + D select next occurrence of selected text
Ctrl + backspace delete prefious word (wed)
End / home jump to end / beginning of line
Shift + end select to end of line
Shift + home select to beginning of line
Shift ⬇⬆ select whole line 
Shift + Ctrl + ⬅/➡ select word to the left/right
Ctrl + home jump to beginning of page
Ctrl + Y undo undo
Ctrl

HTML 
h1>ul>li*5+div  Shortcut to create objects in html
h1>ul>li*5^^div Shortcut to create objects in html
(h1>ul>li*5)div Shortcut to create objects in html
.test creates div with class test
#test creates div with id test
p.test1.test2 creates paragraf with class test
a[href=# target=_blank]*5 check what it create
s{hello} creates tag a with text hello
ul>li>{element nr $} creates list with numered elements
ul>li>{element nr $@5} creates list with numered elements start numbering form digit 5
lorem
lorem5
lorem*3
p*3>lorem3
imput:number
input:pass 

CSS
m10 creates margin 10 px 
m10-20
p-10--20
m10p
fz20
c#f
bgc#123
posa 
posf 
t0
b20
w100p
h300 
fs font style
fz font size 
fwb bolden text for much more see video https://www.udemy.com/course/pisz-szybszy-i-wydajniejszy-kod-html-i-css/learn/lecture/16665416#overview

#swing https://www.udemy.com/course/java-od-podstaw-do-eksperta-tworz-wasne-aplikacje/learn/lecture/7051744#overview
import jacax.swing.*;


20.09.2022 #spring #property #MVC
 to inject properties form sport.properties file you need to add @PropertySource("classpath:sport.properties") in config file
 in class define filds and assign value over fild @Value("${foo.email}")
 if you generate getters in class and their are not in interface you have to change in your app interface for class to be able to use it

21.09.2022 #MVC

22.09.2022 #Bootstrap #html #CSS
Grzegorz Buczyński portfolio started (repo in github)
https://github.com/thecode-chic/Lynda-Single-Page-portfolio-website
https://www.youtube.com/watch?v=ZkzI_qjXIkk <-- how to create
https://www.youtube.com/watch?v=zhcjkjXWboE <-- how to host on github



 






targets
1.  Java od Podstaw do Eksperta - twórz własne aplikacje (Java core, swing, android studio) https://www.udemy.com/course/java-od-podstaw-do-eksperta-tworz-wasne-aplikacje/
1.1 wątki
1.2 ramki
1.3 paint
1.4 method overload

1. napisać komunikator tekstowy
2. napisać zdalny notatnik
3. dowiedzieć się jak działa protokół http/ zapytania http
4. CS50 edx course
5. jak postawić własny serwer restowy. Python - jak łączyć się z zewnętrznym API? https://www.youtube.com/watch?v=Pa23kKiGHH8
6. Microsoft Excel Tutorial for Beginners - Full Course [!2h26min] https://www.youtube.com/watch?v=Vl0H-qTclOg
7. (dokończyć) Python - podstawy w 2h https://www.youtube.com/watch?v=BBu6ZoAHIwI&list=PLp9WLfHXxbce6FEB9bk5sjdptTGI7ybOM
8. IBM Course
9. wszystko o nauce programowania w 1,5h
10. 8 pomysłów na aplikacje 
11. rest API
12. portfolio młodszego programisty
13. jak dzisiaj uczył bym się programowania
14. komunikator
15. Docker
16. Web Tutorials to do https://www.vogella.com/tutorials/web.html
17. Java Tutorials https://www.vogella.com/tutorials/java.html
18. Android Tutorials https://www.vogella.com/tutorials/android.html
20. Software Tutorials (java) https://www.vogella.com/tutorials/algorithms.html ARTICLES ABOUT ALGORITHMS AND DESIGN PATTERNS AND THEIR IMPLEMENTATION IN JAVA

